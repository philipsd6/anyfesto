serverinfo {
        name = "AnyfestoPI.lan";
        sid = "0HY";
        description = "ircd-hybrid 8.1-debian";
        network_name = "anyfesto";
        network_desc = "This is Our Network";
        hub = no;
        max_clients = 512;
        max_nick_length = 15;
        max_topic_length = 300;

};

admin {
        name = "Smurf target";
        description = "Main Server Administrator";
        email = "<root@localhost>";
};

class {
        name = "users";
        ping_time = 90 seconds;
        number_per_ip = 42;
        max_local = 100;
        max_global = 100;
        max_number = 100;
        cidr_bitlen_ipv4 = 24;
        cidr_bitlen_ipv6 = 120;
        number_per_cidr = 16;
        sendq = 100 kbytes;
        recvq = 2560 bytes;
};

class {
        name = "opers";
        ping_time = 9000 seconds;
        number_per_ip = 100;
        max_number = 100;
        sendq = 100 kbytes;
        max_channels = 60;
        min_idle = 3 hours;
        max_idle = 8 hours;
        flags = random_idle, hide_idle_from_opers;
};

class {
 name = "server";
        ping_time = 90 seconds;
        connectfreq = 5 minutes;
        max_number = 1;
        sendq = 2 megabytes;
};

motd {
        mask = "*.at";
        mask = "*.de";
        mask = "*.ch";
        file = "/etc/ircd-hybrid/ircd.motd";
};

listen {
        port = 6665 .. 6669;
};

auth {
        user = "*@127.0.0.1";
        #encrypted = yes;
        spoof = "i.love.debian.org";
        class = "users";
        flags = need_password, spoof_notice, exceed_limit, kline_exempt,
                gline_exempt, resv_exempt, no_tilde, can_flood;
};

auth {
        user = "*@*";
        class = "users";
        flags = ;
};

operator {
        name = "shep";
        user = "shep@10.11.99.1";
        user = "shep@127.0.0.1";
        password = "KhnGN/2eo/B5g";
        encrypted = yes;
        class = "opers";
        umodes = locops, servnotice, wallop;
        flags = admin, connect, connect:remote, die, globops, kill, kill:remote,
                kline, module, rehash, restart, set, unkline, unxline, xline;
};

connect {
        name = "AnyfestoChip.lan";
        host = "127.0.0.1";
        send_password = "password";
        accept_password = "password";
        compressed = no;
};
#shared {
#       name = "hybrid8.debian.local";
#       user = "root@localhost";
#       type = kline, unkline, resv;
#};

resv { mask = "clone*"; reason = "Clone bots"; };
resv { mask = "Global"; reason = "Reserved for services"; };
resv { mask = "ChanServ"; reason = "Reserved for services"; };
resv { mask = "NickServ"; reason = "Reserved for services"; };
resv { mask = "OperServ"; reason = "Reserved for services"; };
resv { mask = "MemoServ"; reason = "Reserved for services"; };
resv { mask = "BotServ"; reason = "Reserved for services"; };
resv { mask = "HelpServ"; reason = "Reserved for services"; };
resv { mask = "HostServ"; reason = "Reserved for services"; };
resv { mask = "StatServ"; reason = "Reserved for services"; };
resv { mask = "#*services*"; reason = "Reserved for services"; };

channel {
        disable_fake_channels = yes;
        invite_client_count = 10;
        invite_client_time = 5 minutes;
        knock_client_count = 1;
        knock_client_time = 5 minutes;
        knock_delay_channel = 1 minute;
        max_channels = 25;
        max_bans = 100;
        join_flood_count = 16;
        join_flood_time = 8 seconds;
        default_split_user_count = 0;
        default_split_server_count = 0;
        no_create_on_split = yes;
        no_join_on_split = no;
};

serverhide {
        disable_remote_commands = no;
        flatten_links = no;
        links_delay = 5 minutes;
        hidden = no;
        hide_servers = no;
        hide_services = no;
        hidden_name = "*.hidden.example.net";
        hide_server_ips = no;
};
general {
        cycle_on_host_change = yes;
        max_accept = 30;
        gline_enable = yes;
        gline_duration = 1 day;
        gline_request_duration = 10 minutes;
        gline_min_cidr = 16;
        gline_min_cidr6 = 48;
        invisible_on_connect = yes;
        kill_chase_time_limit = 30 seconds;
        hide_spoof_ips = yes;
        ignore_bogus_ts = no;
        disable_auth = no;
        tkline_expire_notices = no;
        default_floodcount = 10;
        failed_oper_notice = yes;
        dots_in_ident = 2;
        min_nonwildcard = 4;
        min_nonwildcard_simple = 3;
        anti_nick_flood = yes;
        max_nick_time = 20 seconds;
        max_nick_changes = 5;
        away_count = 2;
        away_time = 10 seconds;
        anti_spam_exit_message_time = 5 minutes;
        ts_warn_delta = 3 seconds;
        ts_max_delta = 15 seconds;
        warn_no_connect_block = yes;
        stats_e_disabled = no;
        stats_o_oper_only = yes;
        stats_P_oper_only = yes;
        stats_u_oper_only = no;
        stats_i_oper_only = yes;
        stats_k_oper_only = yes;
        caller_id_wait = 1 minute;
        opers_bypass_callerid = no;
        pace_wait_simple = 1 second;
        pace_wait = 10 seconds;
        short_motd = no;
        ping_cookie = no;
        true_no_oper_flood = yes;
        oper_pass_resv = yes;
        max_targets = 4;
        oper_only_umodes = bots, cconn, debug, external, farconnect, full, hidden, locops,
                        nchange, rej, skill, spy, unauth;
        oper_umodes = bots, locops, servnotice, wallop;
        throttle_count = 1;
        throttle_time = 2 seconds;
};

modules {
        path = "/usr/lib/ircd-hybrid/modules";
        path = "/usr/lib/ircd-hybrid/modules/autoload";
};

log {
        use_logging = no;

        file {
                type = oper;
                name = "/var/log/ircd/ircd-hybrid-oper.log";
                size = 10 megabytes;
        };
        file {
                type = user;
                name = "/var/log/ircd/ircd-hybrid-user.log";
                size = 10 megabytes;
        };

        file {
                type = kill;
                name = "/var/log/ircd/ircd-hybrid-kill.log";
                size = 10 megabytes;
        };

        file {
                type = kline;
                name = "/var/log/ircd/ircd-hybrid-kline.log";
                size = 10 megabytes;
        };

        file {
                type = dline;
                name = "/var/log/ircd/ircd-hybrid-dline.log";
                size = 10 megabytes;
        };

        file {
                type = gline;
                name = "/var/log/ircd/ircd-hybrid-gline.log";
                size = 10 megabytes;
        };

        file {
                type = xline;
                name = "/var/log/ircd/ircd-hybrid-xline.log";
                size = 10 megabytes;
        };

        file {
                type = resv;
                name = "/var/log/ircd/ircd-hybrid-resv.log";
                size = 10 megabytes;
        };

        file {
                type = debug;
                name = "/var/log/ircd/ircd-hybrid-debug.log";
                size = 10 megabytes;
        };
};

Contact GitHub API Training Shop Blog About
